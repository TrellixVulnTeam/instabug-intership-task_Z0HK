{"ast":null,"code":"import _regeneratorRuntime from\"C:/Apps working on/instabug/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Apps working on/instabug/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{isUserAuthenticated}from'../../services/auth';// login func \nexport var login=function login(email,password){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var authenticated,err;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:dispatch({type:\"LOGIN_REQUEST\"});_context.next=3;return isUserAuthenticated(email,password);case 3:authenticated=_context.sent;if(authenticated){dispatch({type:\"LOGIN_SUCCESS\",payload:authenticated.authenticatedUser});}if(authenticated.authenticatedUser===null){err=\"Your email and/or password are incorrect\";dispatch({type:\"LOGIN_FAIL\",payload:err});}case 6:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}();};//handle user logout \nexport var logout=function logout(){return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch){var authenticated,err;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:dispatch({type:\"LOGOUT_REQUEST\"});authenticated=null;if(!authenticated){dispatch({type:\"LOGOUT_SUCCESS\"});}else{err=\"Something went wrong while logging out \";dispatch({type:\"LOGOUT_FAIL\",payload:err});}case 3:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x2){return _ref2.apply(this,arguments);};}();};//clearing errors \nexport var clearErrors=function clearErrors(){return/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch){return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:dispatch({type:\"CLEAR_ERRORS\"});case 1:case\"end\":return _context3.stop();}}},_callee3);}));return function(_x3){return _ref3.apply(this,arguments);};}();};","map":{"version":3,"sources":["C:/Apps working on/instabug/src/redux/user/user-actions.js"],"names":["isUserAuthenticated","login","email","password","dispatch","type","authenticated","payload","authenticatedUser","err","logout","clearErrors"],"mappings":"iSACA,OAASA,mBAAT,KAAoC,qBAApC,CAIA;AACA,MAAO,IAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,CAACC,KAAD,CAAQC,QAAR,iGAAqB,iBAAMC,QAAN,wIAEtCA,QAAQ,CAAC,CAAEC,IAAI,CAAE,eAAR,CAAD,CAAR,CAFsC,sBAGVL,CAAAA,mBAAmB,CAACE,KAAD,CAAQC,QAAR,CAHT,QAGhCG,aAHgC,eAItC,GAAIA,aAAJ,CAAmB,CACfF,QAAQ,CAAC,CACLC,IAAI,CAAE,eADD,CAELE,OAAO,CAAED,aAAa,CAACE,iBAFlB,CAAD,CAAR,CAIH,CACD,GAAIF,aAAa,CAACE,iBAAd,GAAoC,IAAxC,CAA8C,CACpCC,GADoC,CAC9B,0CAD8B,CAE1CL,QAAQ,CAAC,CACLC,IAAI,CAAE,YADD,CAELE,OAAO,CAAEE,GAFJ,CAAD,CAAR,CAIH,CAhBqC,sDAArB,gEAAd,CAoBP;AACA,MAAO,IAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,mGAAM,kBAAMN,QAAN,4IAExBA,QAAQ,CAAC,CAAEC,IAAI,CAAE,gBAAR,CAAD,CAAR,CACIC,aAHoB,CAGJ,IAHI,CAIxB,GAAI,CAACA,aAAL,CAAoB,CAChBF,QAAQ,CAAC,CACLC,IAAI,CAAE,gBADD,CAAD,CAAR,CAGH,CAJD,IAIO,CACGI,GADH,CACS,yCADT,CAEHL,QAAQ,CAAC,CACLC,IAAI,CAAE,aADD,CAELE,OAAO,CAAEE,GAFJ,CAAD,CAAR,CAKH,CAfuB,wDAAN,kEAAf,CAmBP;AACA,MAAO,IAAME,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,mGAAM,kBAAOP,QAAP,sHAC7BA,QAAQ,CAAC,CACLC,IAAI,CAAE,cADD,CAAD,CAAR,CAD6B,wDAAN,kEAApB","sourcesContent":["\r\nimport { isUserAuthenticated } from '../../services/auth'\r\n\r\n\r\n\r\n// login func \r\nexport const login = (email, password) => async dispatch => {\r\n\r\n    dispatch({ type: \"LOGIN_REQUEST\" })\r\n    const authenticated = await isUserAuthenticated(email, password)\r\n    if (authenticated) {\r\n        dispatch({\r\n            type: \"LOGIN_SUCCESS\",\r\n            payload: authenticated.authenticatedUser\r\n        })\r\n    }\r\n    if (authenticated.authenticatedUser === null) {\r\n        const err = \"Your email and/or password are incorrect\"\r\n        dispatch({\r\n            type: \"LOGIN_FAIL\",\r\n            payload: err\r\n        })\r\n    }\r\n}\r\n\r\n\r\n//handle user logout \r\nexport const logout = () => async dispatch => {\r\n\r\n    dispatch({ type: \"LOGOUT_REQUEST\" })\r\n    let authenticated = null\r\n    if (!authenticated) {\r\n        dispatch({\r\n            type: \"LOGOUT_SUCCESS\",\r\n        })\r\n    } else {\r\n        const err = \"Something went wrong while logging out \"\r\n        dispatch({\r\n            type: \"LOGOUT_FAIL\",\r\n            payload: err\r\n        })\r\n\r\n    }\r\n}\r\n\r\n\r\n//clearing errors \r\nexport const clearErrors = () => async (dispatch) => {\r\n    dispatch({\r\n        type: \"CLEAR_ERRORS\",\r\n    })\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Apps working on\\\\instabug\\\\src\\\\components\\\\login\\\\form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { login } from '../../redux/user/user-actions';\nimport { isEmail, isPassword } from '../../services/validators';\nimport { PartnersIcons } from './partners-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Form = () => {\n  _s();\n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const isInvalid = password === '' || email === '';\n  const {\n    user,\n    isAuthenticated,\n    error,\n    loading\n  } = useSelector(state => state.auth);\n  const dispatch = useDispatch();\n\n  const onUserLogoin = e => {\n    e.preventDefault();\n\n    if (isEmail(email)) {\n      console.log();\n      setEmail('');\n      setPassword('');\n    }\n\n    if (isPassword(password)) {\n      setEmail('');\n      setPassword('');\n    }\n\n    if (isEmail(email) && isPassword(password)) {\n      dispatch(login(email, password));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form_container\",\n    children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"err_container\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form_item\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \" Work Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        className: \"email\",\n        value: email,\n        onChange: ({\n          target\n        }) => setEmail(target.value),\n        placeholder: \"you@company.com\",\n        id: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form_item\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \" Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        className: \"password\",\n        value: password,\n        onChange: ({\n          target\n        }) => setPassword(target.value),\n        placeholder: \"8+ Characters\",\n        id: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      disabled: isInvalid,\n      id: \"sub\",\n      onClick: onUserLogoin,\n      className: `  ${isInvalid ? 'dis' : 'btn_login'}`,\n      children: \"Log in\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text_form\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Don`t have an account ? \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Sign up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 56\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 44\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Login via SSO\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 29\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form_text_center\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Trusted by the top companies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PartnersIcons, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Form, \"KcBbv5+CX8chYBB+k+r1BkPhhpg=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["C:/Apps working on/instabug/src/components/login/form.js"],"names":["React","useState","useDispatch","useSelector","Link","login","isEmail","isPassword","PartnersIcons","Form","email","setEmail","password","setPassword","isInvalid","user","isAuthenticated","error","loading","state","auth","dispatch","onUserLogoin","e","preventDefault","console","log","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { login } from '../../redux/user/user-actions'\r\nimport { isEmail, isPassword } from '../../services/validators'\r\nimport { PartnersIcons } from './partners-icons'\r\n\r\nexport const Form = () => {\r\n\r\n\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const isInvalid = password === '' || email === ''\r\n    const { user, isAuthenticated, error, loading } = useSelector(state => state.auth)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const onUserLogoin = (e) => {\r\n        e.preventDefault();\r\n        if (isEmail(email)) {\r\n            console.log()\r\n            setEmail('')\r\n            setPassword('')\r\n        }\r\n        if (isPassword(password)) {\r\n\r\n            setEmail('')\r\n            setPassword('')\r\n        }\r\n        if (isEmail(email) && isPassword(password)) {\r\n            dispatch(login(email, password))\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"form_container\">\r\n            {error && <div className=\"err_container\">\r\n                <p>{error}</p>\r\n            </div>\r\n            }\r\n            <div className=\"form_item\">\r\n                <label > Work Email</label>\r\n                <input type=\"email\" className=\"email\" value={email} onChange={({ target }) => setEmail(target.value)} placeholder=\"you@company.com\" id=\"\" />\r\n            </div>\r\n            <div className=\"form_item\">\r\n                <label > Password</label>\r\n                <input type=\"password\" className=\"password\" value={password} onChange={({ target }) => setPassword(target.value)} placeholder=\"8+ Characters\" id=\"\" />\r\n            </div>\r\n            <button type=\"submit\" disabled={isInvalid} id=\"sub\" onClick={onUserLogoin} className={`  ${isInvalid ? 'dis' : 'btn_login'}`} >Log in</button>\r\n            <div className=\"text_form\">\r\n                <p>Don`t have an account ? <Link to=\"\"><span>Sign up</span></Link></p>\r\n                <Link to=\"\"><span>Login via SSO</span> </Link>\r\n            </div>\r\n            <div className=\"form_text_center\">\r\n                <p>Trusted by the top companies</p>\r\n            </div>\r\n            <PartnersIcons />\r\n\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}